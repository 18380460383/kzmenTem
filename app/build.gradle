apply plugin: 'com.android.application'

android {
    signingConfigs {
    }
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.kzmen.sczxjf"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 8
        versionName "1.8"
        ndk {
            moduleName "mupdf"
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
        multiDexEnabled true
        sourceSets.main {
            jniLibs.srcDirs = ["jniLibs"]    //so指定存放目录,生成so文件后需要手动将其拷贝到该目录
        }
    }
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
    signingConfigs {
        release {
            storeFile file("kzmen.jks")
            storePassword "kzmen123456"
            keyAlias "kzmen"
            keyPassword "kzmen123456"
        }
        debug {
            storeFile file("kzmen.jks")
            storePassword "kzmen123456"
            keyAlias "kzmen"
            keyPassword "kzmen123456"
        }
    }
    buildTypes {
        debug {
            // signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // signingConfig signingConfigs.release
        }
    }
    afterEvaluate {
        tasks.matching {
            it.name.startsWith('dex')
        }.each { dx ->
            if (dx.additionalParameters == null) {
                dx.additionalParameters = []
            }
            dx.additionalParameters += '--multi-dex' // enable multidex
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs' /**在libs文件夹下找aar文件*/
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':pulltorefresh')
    compile project(':jcvideoplayer-lib')
    compile project(':RxTools-library')
    compile project(':pingpp')
    /*  compile 'com.android.support:recyclerview-v7:24.0.0'
        compile 'com.android.support:support-v4:24.2.1'
        compile 'com.android.support:appcompat-v7:24.2.1'*/
    //  compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha7'
    // compile 'com.pingxx:pingpp-core:2.1.11' // 必须添加
    //compile 'com.pingxx:pingpp-alipay:2.1.11' // 使用支付宝时添加
    // compile 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:1.3.4'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.android.support:percent:25.3.1'
    compile 'me.leolin:ShortcutBadger:1.1.3@aar'
    compile 'com.ogaclejapan.smarttablayout:library:1.6.0@aar'
    compile 'com.ogaclejapan.smarttablayout:utils-v4:1.6.0@aar'
    compile 'com.meiqia:meiqiasdk:3.2.5@aar'
    compile 'com.squareup.okhttp3:okhttp:3.3.1'
    compile 'com.squareup.picasso:picasso:2.4.0'
    compile 'com.android.support:design:25.3.1'
    compile 'com.github.chrisbanes.photoview:library:1.2.4'
    compile 'com.lzy.net:okhttputils:+'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'jp.wasabeef:glide-transformations:2.0.1'
    compile files('libs/tbs_sdk_thirdapp_v3.1.0.1034_43100_sharewithdownload_obfs_20170301_182143.jar')
}
